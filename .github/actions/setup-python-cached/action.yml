name: 'Setup Python with Cached Dependencies'
description: 'Setup Python and cache entire site-packages directory'

inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.11'

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Get Python paths
      id: python-paths
      shell: python
      run: |
        import os
        import sys
        import site
        import subprocess
        import platform
        
        # Get site-packages path
        site_packages = site.getsitepackages()[0]
        
        # Get pip cache dir
        pip_cache = subprocess.check_output([sys.executable, "-m", "pip", "cache", "dir"]).decode().strip()
        
        # Get hash of requirements files for cache key
        import hashlib
        hasher = hashlib.sha256()
        
        for file in ['requirements.txt', 'pyproject.toml']:
            if os.path.exists(file):
                with open(file, 'rb') as f:
                    hasher.update(f.read())
        
        req_hash = hasher.hexdigest()[:16]
        
        # Output for GitHub Actions
        output_file = os.environ.get('GITHUB_OUTPUT', '')
        if output_file:
            with open(output_file, 'a') as f:
                f.write(f"site-packages={site_packages}\n")
                f.write(f"pip-cache={pip_cache}\n")
                f.write(f"cache-key={platform.system()}-py{sys.version_info.major}.{sys.version_info.minor}-{req_hash}\n")
                f.write(f"python-version={sys.version}\n")

    - name: Cache Python environment
      uses: actions/cache@v3
      id: python-cache
      with:
        path: |
          ${{ steps.python-paths.outputs.site-packages }}
          ${{ steps.python-paths.outputs.pip-cache }}
          ~/.local/bin
          ~/.local/lib
          ~/Library/Python
        key: ${{ steps.python-paths.outputs.cache-key }}
        restore-keys: |
          ${{ runner.os }}-py${{ inputs.python-version }}-

    - name: Install dependencies
      shell: bash
      run: |
        echo "Cache hit: ${{ steps.python-cache.outputs.cache-hit }}"
        echo "Python version: ${{ steps.python-paths.outputs.python-version }}"
        echo "Site packages: ${{ steps.python-paths.outputs.site-packages }}"
        
        if [[ "${{ steps.python-cache.outputs.cache-hit }}" != "true" ]]; then
          echo "Cache miss - installing all dependencies"
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
        else
          echo "Cache hit - reinstalling only local package"
          # Reinstall the local package in case code changed
          pip install -e . --no-deps --force-reinstall
        fi

    - name: Verify installation
      shell: bash
      run: |
        echo "=== Installed packages ==="
        pip list | head -20
        echo "..."
        echo "=== Package location ==="
        python -c "import ovmobilebench; print(f'Package installed at: {ovmobilebench.__file__}')"
        echo "=== CLI availability ==="
        which ovmobilebench || echo "CLI not in PATH"