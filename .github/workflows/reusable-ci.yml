name: Reusable CI Workflow

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      device_serial:
        required: false
        type: string

jobs:
  lint-and-test:
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup dependencies
        uses: ./.github/actions/setup-dependencies

      - name: Run Black
        run: black --check ovmobilebench tests

      - name: Run Ruff
        run: ruff check ovmobilebench tests

      - name: Run MyPy
        run: mypy ovmobilebench --ignore-missing-imports

      - name: Run tests
        run: pytest tests/ -v --cov=ovmobilebench --cov=scripts --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-${{ inputs.os }}
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  build-package:
    needs: lint-and-test
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup build dependencies
        uses: ./.github/actions/setup-dependencies
        with:
          cache-key-suffix: build-only

      - name: Build package
        run: python -m build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ inputs.os }}
          path: dist/
          retention-days: 7

  dry-run:
    needs: lint-and-test
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup dependencies
        uses: ./.github/actions/setup-dependencies

      - name: Validate example config
        run: |
          python -c "from ovmobilebench.config.loader import load_experiment; load_experiment('experiments/android_example.yaml')"

      - name: CLI help test
        run: |
          ovmobilebench --help
          ovmobilebench build --help
          ovmobilebench run --help

  device-test-ssh:
    if: inputs.os == 'ubuntu-latest'  # SSH tests only on Ubuntu for now
    needs:
      - build-package
      - dry-run
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup dependencies
        uses: ./.github/actions/setup-dependencies

      - name: Set up SSH server
        run: |
          # Generate and run SSH setup script
          python scripts/generate_ssh_config.py --type setup
          bash scripts/setup_ssh_ci.sh || echo "SSH setup had warnings, continuing..."

      - name: List SSH devices
        run: |
          ovmobilebench list-ssh-devices || echo "Command not yet implemented"

      - name: Test SSH deployment
        run: |
          # Generate and run SSH test script
          python scripts/generate_ssh_config.py --type test
          python scripts/test_ssh_device_ci.py

      - name: Run benchmark dry-run via SSH
        run: |
          # Generate SSH config using Python script
          python scripts/generate_ssh_config.py --type config
          
          # Run in dry-run mode
          ovmobilebench all -c experiments/ssh_localhost_ci.yaml --dry-run || true

      - name: Upload SSH test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-ssh-${{ inputs.os }}
          path: experiments/results/
          retention-days: 30

  # Optional: Run on a self-hosted runner with a real device
  device-test-adb:
    # Only run if explicitly triggered and only once (not for each OS in matrix)
    if: (github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[device-test-adb]')) && inputs.os == 'ubuntu-latest'
    needs:
      - build-package
      - dry-run
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Setup dependencies
        uses: ./.github/actions/setup-dependencies

      - name: Check ADB devices
        run: adb devices

      - name: Run minimal benchmark
        env:
          DEVICE_SERIAL: ${{ inputs.device_serial }}
        run: |
          ovmobilebench list-devices
          # Uncomment when ready:
          # ovmobilebench all -c experiments/android_example.yaml --dry-run

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-adb-${{ inputs.os }}
          path: experiments/results/
          retention-days: 30
